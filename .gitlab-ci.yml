image: python:3.8  # Nutzt das Python 3.8 Docker-Image

stages:
  - build_docker
  - test
  - lint
  - deploy

build_docker_image:
  stage: build_docker
  image: docker:stable
  services:
    - docker:dind
  script:
    - echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
    - docker build -t $DOCKER_USERNAME/my-snyk-test:latest .
    - docker push $DOCKER_USERNAME/my-snyk-test:latest
  only:
    - main

unit-test-job:
  stage: test
  script:
    - echo "Installing dependencies..."
    - pip install pytest
    - echo "Running unit tests..."
    - cd python_Calculator
    - pytest --junitxml=report.xml
  artifacts:
    when: always
    paths:
      - python_Calculator/report.xml

lint-job:
  stage: lint
  script:
    - echo "Running Linting..."
    - pip install pylint
    - cd python_Calculator
    - pylint calculator.py test_calculator.py --output-format=text > pylint-report.txt || true
  artifacts:
    when: always
    paths:
      - python_Calculator/pylint-report.txt

# snyk_test_job:
#   stage: snyk_test
#   image: $DOCKER_USERNAME/my-snyk-test:latest
#   script:
#     - echo "Running Snyk security tests..."
#     - snyk auth $SNYK_TOKEN
#     - cd python_Calculator
#     - snyk test --file=requirements.txt
#   only:
#     - main
#   variables:
#     SNYK_TOKEN: $SNYK_TOKEN
#   allow_failure: true

deploy-job:
  stage: deploy
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
