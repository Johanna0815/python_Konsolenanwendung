stages:
  - build
  - test
  - lint
  - snyk_test
  - deploy

variables:
  DOCKER_USERNAME: johanna0815  # Stelle sicher, dass dies in GitLab CI/CD als Variable oder Secret hinterlegt ist
  DOCKER_PASSWORD: $DOCKER_PASSWORD  # Dies sollte als Secret in GitLab hinterlegt sein

build_docker_image:
  stage: build
  image: docker:stable
  services:
    - docker:dind
  script:
    - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
    - docker build -t $DOCKER_USERNAME/my-snyk-test:latest .
    - docker push $DOCKER_USERNAME/my-snyk-test:latest
  only:
    - main

unit-test-job:
  stage: test
  image: $DOCKER_USERNAME/my-snyk-test:latest
  script:
    - echo "Running unit tests..."
    - pytest --junitxml=report.xml  # FÃ¼hre Tests aus und erzeuge eine JUnit-kompatible XML
  artifacts:
    when: always
    paths:
      - python_Calculator/report.xml

lint-job:
  stage: lint
  image: $DOCKER_USERNAME/my-snyk-test:latest
  script:
    - echo "Running Linting..."
    - pylint calculator.py test_calculator.py --output-format=text > pylint-report.txt
  artifacts:
    when: always
    paths:
      - python_Calculator/pylint-report.txt

snyk_test_job:
  stage: snyk_test
  image: $DOCKER_USERNAME/my-snyk-test:latest
  script:
    - echo "Running Snyk security tests..."
    - snyk auth $SNYK_TOKEN
    - cd python_Calculator
    - snyk test --file=requirements.txt
  only:
    - main
  variables:
    SNYK_TOKEN: $SNYK_TOKEN
  allow_failure: true

deploy-job:
  stage: deploy
  image: $DOCKER_USERNAME/my-snyk-test:latest
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
