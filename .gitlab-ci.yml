image: python:3.8  # Nutzt das Python 3.8 Docker-Image

stages:
  - build
  - test
  - lint
  - deploy

build-job:
  stage: build
  script:
    - echo "Building application..."
    - pip install -r requirements.txt  # Adjust if your build process involves more steps

unit-test-job:
  stage: test
  script:
    - echo "Installing dependencies..."
    - pip install pytest
    - echo "Running unit tests..."
    - pytest --junitxml=report.xml
  artifacts:
    when: always
    paths:
      - report.xml

lint-job:
  stage: lint
  script:
    - echo "Running Linting..."
    - pip install pylint
    - pylint *.py --output-format=text > pylint-report.txt || true  # Adjust to include your project files
  artifacts:
    when: always
    paths:
      - pylint-report.txt

deploy-job:
  stage: deploy
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
